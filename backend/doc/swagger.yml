openapi: 3.0.0

info:
  title: Ekki
  description: Criado para testes
  version: 0.0.1

servers:
  - url: http://localhots:3000
    description: Desenvolvimento
    
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

tags:
  - name: Contato
    description: Contatos namespace
  - name: Tranferencia
    description: Tranferencia namespace
  - name: System
    description: System namespace

paths:
  /transferencia:
    get:
      tags: 
        - Tranferencia
      summary: Retorna a lista de transferencias.
      parameters:
        - in: query
          name: valor
          description: valor da transferencia
          schema:
            type: string
            example: 50
        - in: query
          name: status
          description: Cpf do contato
          schema:
            type: string
            example: 'FINALIZADO'
      responses:
        200:    # status code
          $ref: '#/components/responses/transferencia'
                  
    post:
      tags: 
        - Tranferencia
      summary: Criação de contatos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferencia'
      responses:
        200:    # status code
          description: Transferencia realizada com sucesso.
          content:
            application/json:
              schema: 
                type: string
                example: 'Transferencia realizada com sucesso ID 1'
        400:    # status code
          $ref: '#/components/responses/badRequest'
        500:    # status code
          $ref: '#/components/responses/internal'
          
          
  /system/usuario:
    get:
      tags: 
        - System
      summary: Retorna o usuário atual.
      responses:
        200:    # status code
          $ref: '#/components/responses/usuario'
                  
                  
  /system/status:
    get:
      tags: 
        - System
      summary: Retorna o status da API.
      responses:
        200:    # status code
          description: Retorna o status da API.
          content:
            application/json:
              schema: 
                type: string
                example: 'OK'
                  
  /system/reload:
    get:
      tags: 
        - System
      summary: Zerar o ambiente.
      responses:
        200:    # status code
          description: gerar um novo usuário.
          content:
            application/json:
              schema: 
                type: string
                example: 'Reload realizado com sucesso'
        400:    # status code
          $ref: '#/components/responses/badRequest'
  
  /contato:
    get:
      tags: 
        - Contato
      summary: Retorna a lista de contatos.
      parameters:
        - in: query
          name: nome
          description: Nome do contato
          schema:
            type: string
            example: 'Carlos'
        - in: query
          name: cpf
          description: Cpf do contato
          schema:
            type: string
            example: '34691989005'
        - in: query
          name: telefone
          description: Telefone do contato
          schema:
            type: string
            example: '2835086501612'
      responses:
        200:    # status code
          $ref: '#/components/responses/contato'
                  
    post:
      tags: 
        - Contato
      summary: Criação de contatos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contato'
      responses:
        200:    # status code
          description: Retorna a lista de contatos.
          content:
            application/json:
              schema: 
                type: string
                example: 'Criado com sucesso ID 1'
        400:    # status code
          $ref: '#/components/responses/badRequest'
        500:    # status code
          $ref: '#/components/responses/internal'
          
  /contato/{id}:
    get:
      tags: 
        - Contato
      summary: Retorna um contato por ID.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do contato
          schema:
            type: string
            example: '1'
      responses:
        200:    # status code
          description: lista de contato.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  nome:
                    type: string
                    example: 'Carlos'
                  cpf:
                    type: string
                    example: '34691989005'
                  telefone:
                    type: string
                    example: '2835086501612'
                  saldo:
                    type: number
                    example: 1000
                  limit:
                    type: number
                    example: 500
                  createdAt:
                    type: string
                    example: '2021-03-31 22:34:36.476'
                  updatedAt:
                    type: string
                    example: '2021-03-31 22:34:36.476'
        400:    # status code
          $ref: '#/components/responses/badRequest'
        500:    # status code
          $ref: '#/components/responses/internal'
                  
    put:
      tags: 
        - Contato
      summary: Atualiza um contato.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do contato
          schema:
            type: string
            example: '1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contato'
      responses:
        200:    # status code
          description: Retorna status.
          content:
            application/json:
              schema: 
                type: string
                example: 'ID 1 Atualizado com sucesso'
        400:    # status code
          $ref: '#/components/responses/badRequest'
        500:    # status code
          $ref: '#/components/responses/internal'
          
    delete:
      tags: 
        - Contato
      summary: Deleta um contato.
      parameters:
        - in: path
          required: true
          name: id
          description: ID do contato
          schema:
            type: string
            example: '1'
      responses:
        200:    # status code
          description: Retorna a lista de contatos.
          content:
            application/json:
              schema: 
                type: string
                example: 'Deletado com sucesso ID 1'
        400:    # status code
          $ref: '#/components/responses/badRequest'
        500:    # status code
          $ref: '#/components/responses/internal'
                  

      
components:
  responses:
    badRequest:
      description: Falha na request.
      content:
          application/json:
            schema: 
              type: array
              items: 
                type: object
                properties:
                  message:
                    type: string
                    
    notFound:
      description: valor não encontrado.
      content:
          application/json:
            schema: 
              type: array
              items: 
                type: object
                properties:
                  message:
                    type: string
                    
    internal:
      description: erro interno.
      content:
          application/json:
            schema: 
              type: array
              items: 
                type: object
                properties:
                  message:
                    type: string
    
    contato:
      description: lista de contato.
      content:
          application/json:
            schema: 
              type: array
              items: 
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  nome:
                    type: string
                    example: 'Carlos'
                  cpf:
                    type: string
                    example: '34691989005'
                  telefone:
                    type: string
                    example: '2835086501612'
                  saldo:
                    type: number
                    example: 1000
                  limit:
                    type: number
                    example: 500
                  createdAt:
                    type: string
                    example: '2021-03-31 22:34:36.476'
                  updatedAt:
                    type: string
                    example: '2021-03-31 22:34:36.476'
                    
    transferencia:
      description: lista de transferencias.
      content:
          application/json:
            schema: 
              type: array
              items: 
                type: object
                properties:
                  transferencia:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      valor:
                        type: number
                        example: 50
                      contatoId:
                        type: string
                        example: '1'
                      contaId:
                        type: string
                        example: '1'
                      descricao:
                        type: string
                      status:
                        type: string
                        enum: ['FINALIZADO', 'CANCELADO']
                        example: 'FINALIZADO'
                      createdAt:
                        type: string
                        example: '2021-03-31 22:34:36.476'
                      updatedAt:
                        type: string
                        example: '2021-03-31 22:34:36.476'
                  contato:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      nome:
                        type: string
                        example: '1'
                      cpf:
                        type: number
                        example: 12354687987
                      saldo:
                        type: number
                        example: 1000
                      limite:
                        type: number
                        example: 500
                      telefone:
                        type: number
                        example: 12354687987
                      usuarioId:
                        type: number
                        example: 1
                      status:
                        type: string
                        enum: ['ATIVADO', 'DESATIVADO']
                        example: 'ATIVADO'
                      createdAt:
                        type: string
                        example: '2021-03-31 22:34:36.476'
                      updatedAt:
                        type: string
                        example: '2021-03-31 22:34:36.476'
    
    usuario:
      description: usuário logado.
      content:
          application/json:
            schema: 
              type: object
              properties:
                usuario:
                  type: object
                  properties: 
                    id:
                      type: number
                      example: '1'
                    nome:
                      type: string
                      example: 'dudu'
                    cpf:
                      type: string
                      example: '12345678912'
                    telefone:
                      type: string
                      example: '12300545'
                    createdAt:
                      type: string
                      example: '2021-03-31 22:34:36.476'
                    updatedAt:
                      type: string
                      example: '2021-03-31 22:34:36.476'
                conta:
                  type: object
                  properties: 
                    id:
                      type: number
                      example: '1'
                    saldo:
                      type: number
                      example: '1000'
                    limite:
                      type: number
                      example: '500'
                    createdAt:
                      type: string
                      example: '2021-03-31 22:34:36.476'
                    updatedAt:
                      type: string
                      example: '2021-03-31 22:34:36.476'
                    
                  
  schemas:
    contato:
      type: object
      required: 
        - nome
        - cpf
        - telefone
      properties:
        nome:
          type: string
          example: 'Carlos'
        cpf:
          type: string
          example: '34691989005'
        telefone:
          type: string
          example: '2835086501612'
          
    transferencia:
      type: object
      required: 
        - valor
        - contato
      properties:
        valor:
          type: number
          example: 50
        contato:
          type: string
          example: '1'
    
      